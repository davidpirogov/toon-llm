[project]
name = "toon-llm"
version = "1.0.0b4"
description = "Token-Oriented Object Notation â€“ Optimised serialization JSON for LLMs"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
  { name = "David Pirogov", email = "580286+davidpirogov@users.noreply.github.com" },
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Information Technology",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Text Processing :: Markup",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Utilities",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: 3 :: Only",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
dependencies = [
  "better-exceptions>=0.3.3",
  "coverage>=7.11.0",
  "pydantic>=2.12.3",
  "pyright>=1.1.407",
  "pytest>=8.4.2",
  "pytest-cov>=6.0.0",
  "ruff>=0.14.2",
  "tox>=4.32.0",
  "tox-uv>=1.29.0",
  "typer>=0.15.0",
]

[project.scripts]
toon = "toon.main:app"

[project.urls]
Homepage = "https://github.com/davidpirogov/toon-llm"

[tool.black]
line-length = 110

[tool.hatch.build.targets.wheel]
only-include = ["src/toon"]
sources = ["src"]

[tool.hatch.build.targets.sdist]
only-include = ["src/toon"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config",
  "--cov=toon",
  "--cov-branch",
  "--cov-report=term-missing:skip-covered",
  "--cov-report=html",
  "--cov-report=xml",
  "--cov-fail-under=20",
  "--maxfail=1",
  "--tb=short",
]

# Coverage configuration
[tool.coverage.run]
source = ["toon"]
branch = true
parallel = true
omit = ["*/tests/*", "*/__init__.py", "*/.venv/*", "*/venv/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
  "@overload",
  "@abstractmethod",
  "@abc.abstractmethod",
  "class .*\\(Protocol\\):",
  "class .*\\(typing.Protocol\\):",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
